name: Deploy to AWS EC2

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Images to Docker Hub
        run: |
          docker compose build
          docker compose push

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add EC2 host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: |
            MONGODB_URI
            REDIS_URL
            RABBITMQ_URL
            IDENTITY_SERVICE_URL
            POST_SERVICE_URL
            MEDIA_SERVICE_URL
            SEARCH_SERVICE_URL
            JWT_SECRET
          script: |
            # Install Docker and Docker Compose if not installed
            if ! command -v docker &> /dev/null; then
              echo "Installing Docker..."
              sudo apt update
              sudo apt install -y docker.io docker-compose
              sudo usermod -aG docker $USER
            fi

            cd /home/ubuntu
            rm -rf node-microservice
            git clone https://github.com/dageshwar07/node-microservice.git
            cd node-microservice

            echo "Setting environment variables..."
            echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" > .env
            echo "REDIS_URL=${{ secrets.REDIS_URL }}" >> .env
            echo "RABBITMQ_URL=${{ secrets.RABBITMQ_URL }}" >> .env
            echo "IDENTITY_SERVICE_URL=${{ secrets.IDENTITY_SERVICE_URL }}" >> .env
            echo "POST_SERVICE_URL=${{ secrets.POST_SERVICE_URL }}" >> .env
            echo "MEDIA_SERVICE_URL=${{ secrets.MEDIA_SERVICE_URL }}" >> .env
            echo "SEARCH_SERVICE_URL=${{ secrets.SEARCH_SERVICE_URL }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

            docker compose pull
            docker compose down
            docker compose up -d --remove-orphans



